#tests for matrix divided
>>> from importlib import import_module
>>> matrix_divided = import_module('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3], [1, 2, 3], [1, 2, 3]], 3)
[[0.33, 0.67, 1.0], [0.33, 0.67, 1.0], [0.33, 0.67, 1.0]]

>>> try:
...      matrix_divided([[1, 2, "3"], [1, 2, 3], [1, 2, 3]], 3)
... except TypeError as ex:
...     print(ex.args[0])
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...      matrix_divided([[1, 2, 3], [1, 2, 3], [1, 2]], 3)
... except TypeError as ex:
...     print(ex.args[0])
Each row of the matrix must have the same size
>>> try:
...      matrix_divided([[1, 2, 3, 4], [1, 2, 3], [1, 2]], 3)
... except TypeError as ex:
...     print(ex.args[0])
Each row of the matrix must have the same size

>>> try:
...      matrix_divided([[1, 2, "3"], [1, 2, 3], [1, 2, 3]], 3)
... except TypeError as ex:
...     print(ex.args[0])
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...      matrix_divided([[1, 2, "3"], [1, 2, 3], [1, 2, 3]], True)
... except TypeError as ex:
...     print(ex.args[0])
div must be a number

>>> try:
...      matrix_divided([[1, 2, "3"], [1, 2, 3], [1, 2, 3]], "20")
... except TypeError as ex:
...     print(ex.args[0])
div must be a number

>>> try:
...      matrix_divided([[1, 2, "3"], [1, 2, 3], [1, 2, 3]], 0)
... except ZeroDivisionError as ex:
...     print(ex.args[0])
division by zero

>>> try:
...      matrix_divided()
... except TypeError as ex:
...     print(ex.args[0])
div must be a number

>>> try:
...      matrix_divided([[1,2],[1,2]])
... except TypeError as ex:
...     print(ex.args[0])
div must be a number
